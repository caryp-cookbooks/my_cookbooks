<VirtualHost *:<%= @params[:vhost_port] %>>
  ServerName <%= @params[:server_name] %>
  DocumentRoot <%= @params[:docroot] %>/public
  <DirectoryMatch  /\.git/|/\.svn/ >
    Deny from all
  </DirectoryMatch>

  RailsBaseURI /
  RailsEnv <%= @params[:rails_env] %>

  RailsSpawnMethod <%= @node[:rails][:spawn_method] %>
  PassengerMaxPoolSize <%= @node[:rails][:max_pool_size] %>

  <Directory <%= @params[:docroot] %>/public >
    Options FollowSymLinks
    AllowOverride None
    Order allow,deny
    Allow from all
  </Directory>

  RewriteEngine On
  # Uncomment for rewrite debugging
  #RewriteLog <%= @node[:apache][:log_dir] %>/http_rewrite_log
  #RewriteLogLevel 9

  # Enable status page for monitoring purposes
  RewriteCond %{REMOTE_ADDR} ^(127.0.0.1)
  RewriteRule ^(/server-status) $1 [H=server-status,L]

  # Redirects to a maintenance page if the specified file below exists
  # ...but it still allows images to be served
  RewriteCond %{DOCUMENT_ROOT}/system/maintenance.html -f
  RewriteCond %{SCRIPT_FILENAME} !/system/maintenance.html
  RewriteCond %{SCRIPT_FILENAME} !^(.+).(gif|png|jpg|css|js|swf)$
  RewriteRule ^.*$ /system/maintenance.html [L]

  # Setup the logs in the appropriate directory
  CustomLog <%= @node[:apache][:log_dir] %>/access_log combined
  ErrorLog  <%= @node[:apache][:log_dir] %>/error_log

  #Remote logging -- handle by syslog
  ErrorLog "|logger -p local3.info -t httperror"
  CustomLog "|logger -p local3.info -t http" combined

  LogLevel warn

  # Deflate
  AddOutputFilterByType DEFLATE text/html text/plain text/xml application/xml application/xhtml+xml text/javascript text/css application/x-javascript
  BrowserMatch ^Mozilla/4 gzip-only-text/html
  BrowserMatch ^Mozilla/4.0[678] no-gzip
  BrowserMatch bMSIE !no-gzip !gzip-only-text/html

  SetEnvIf User-Agent ".*MSIE.*" nokeepalive ssl-unclean-shutdown downgrade-1.0 

</VirtualHost>
