## Resat - RightScale API Automated Test
#
# This script creates a deployment with
# DB master and slave servers


# Create Deployment
name: Create Database Deployment
ignore: no
steps:

  - request:
      operation:        create
      resource:         deployments
      valid_codes:
        - 201
      params:
        - name:         deployment[nickname]
          value:        $deployment_name
        - name:         deployment[description]
          value:        'Deployment for database template test'
    filters:
      - name:           extract deployment id
        target:         header
        extractors:
          - field:      location
            variable:   deployment_href
            save:       true
          - field:      location
            pattern:    '.*\/(\d+)$'
            variable:   deployment_id
            save:       true

# Setup deployment inputs
  - request:
      operation:        update
      resource:         deployments
      id:               $deployment_id
      params:
        - name:         deployment[parameters][db/admin/password]
          value:        $db_admin_password
        - name:         deployment[parameters][db/admin/user]
          value:        $db_admin_user
        - name:         deployment[parameters][db/backup/lineage]
          value:        $db_backup_lineage
        - name:         deployment[parameters][db/backup/lineage_override]
          value:        $db_backup_lineage_override
        - name:         deployment[parameters][db/backup/master/hour]
          value:        $db_backup_master_hour
        - name:         deployment[parameters][db/backup/master/minute]
          value:        $db_backup_master_minute
        - name:         deployment[parameters][db/backup/slave/hour]
          value:        $db_backup_slave_hour
        - name:         deployment[parameters][db/backup/slave/minute]
          value:        $db_backup_slave_minute
        - name:         deployment[parameters][db/replication/password]
          value:        $db_replication_password
        - name:         deployment[parameters][db/replication/user]
          value:        $db_replication_user
        - name:         deployment[parameters][db_mysql/datadir_relocate]
          value:        $db_mysql_datadir_relocate
        - name:         deployment[parameters][db_mysql/log_bin]
          value:        $db_mysql_log_bin
        - name:         deployment[parameters][db_mysql/server_usage]
          value:        $db_mysql_server_usage
        - name:         deployment[parameters][db_mysql/tmpdir]
          value:        $db_mysql_tmpdir
        - name:         deployment[parameters][dns/master_id]
          value:        $dns_master_id
        - name:         deployment[parameters][dns/password]
          value:        $dns_password
        - name:         deployment[parameters][dns/user]
          value:        $dns_user
        - name:         deployment[parameters][dropbox/email]
          value:        $dropbox_email
        - name:         deployment[parameters][dropbox/password]
          value:        $dropbox_password
        - name:         deployment[parameters][remote_storage/default/account/credentials]
          value:        $remote_storage_default_account_credentials
        - name:         deployment[parameters][remote_storage/default/account/id]
          value:        $remote_storage_default_account_id
        - name:         deployment[parameters][remote_storage/default/container]
          value:        $remote_storage_default_container
        - name:         deployment[parameters][rs_utils/private_ssh_key]
          value:        $rs_utils_private_ssh_key
        - name:         deployment[parameters][rs_utils/process_list]
          value:        $rs_utils_process_list
        - name:         deployment[parameters][rs_utils/timezone]
          value:        $rs_utils_timezone

# Create Master DB
  - request:
      operation:        create
      resource:         servers
      valid_codes:
       - 201
      params:
        - name:         server[nickname]
          value:        'DB Master - server template test'
        - name:         server[server_template_href]
          value:        $DB_server_template_href
        - name:         server[deployment_href]
          value:        $deployment_href
        - name:         server[ec2_security_group_href]
          value:        $security_group_href
        - name:         server[ec2_ssh_key_href]
          value:        $ssh_key_href
        - name:         server[availabilty_zone]
          value:        $availability_zone
    filters:
      - name:           validate server response
        target:         body
        is_empty:       true
      - name:           extract server id
        target:         header
        extractors:
          - field:      location
            variable:   DB_Master_href
            save:       true
          - field:      location
            pattern:    '.*\/(\d+)$'
            variable:   DB_Master
            save:       true

  - request:
      resource:         servers
      id:               $DB_Master
      custom:
        name:           start
        type:           post
        separator:      "/"

  - request:
      operation:        show
      resource:         servers
      id:               $DB_Master
    guards:
      - target:         body
        field:          server/state
        pattern:        "operational"
        period:         10
        timeout:        300
        name:           DB_Master_op

# Create Slave DB
  - request:
      operation:        create
      resource:         servers
      valid_codes:
        - 201
      params:
        - name:         server[nickname]
          value:        'DB Slave - server template test'
        - name:         server[server_template_href]
          value:        $DB_server_template_href
        - name:         server[deployment_href]
          value:        $deployment_href
        - name:         server[ec2_security_group_href]
          value:        $security_group_href
        - name:         server[ec2_ssh_key_href]
          value:        $ssh_key_href
        - name:         server[availabilty_zone]
          value:        $availability_zone2
    filters:
      - name:           validate server response
        target:         body
        is_empty:       true
      - name:           extract server id
        target:         header
        extractors:
          - field:      location
            variable:   DB_Slave_href
            save:       true
          - field:      location
            pattern:    '.*\/(\d+)$'
            variable:   DB_Slave
            save:       true

  - request:
      resource:         servers
      id:               $DB_Slave
      custom:
        name:           start
        type:           post
        separator:      "/"

  - request:
      operation:        show
      resource:         servers
      id:               $DB_Slave
    guards:
      - target:         body
        field:          server/state
        pattern:        "operational"
        period:         10
        timeout:        300
        name:           DB_Slave_op











